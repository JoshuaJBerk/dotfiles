" Maintainer: Joshua Berk <joshua.j.berk@gmail.com>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Basic Defaults
set nocompatible             " vim settings, rather than vi
set nomodeline               " avoid self-executed security vulnerabilities

" Indentation + Formatting
set expandtab                " use spaces, not tabs
set smarttab                 " insert tabs @ line start re: shiftwidth
set tabstop=4                " display tabs as X spaces
set softtabstop=4            " insert mode creates X spaces
set shiftwidth=4             " reindent operations (<< && >>)
set shiftround               " use multiple of shiftwidth with '<' and '>'
set formatoptions+=tcqj      " see ':help fo-table' for details

" Search/Substitution/Completion
set hlsearch                 " highlight search results
set incsearch                " do incremental searching
set ignorecase               " removes case sensitivity by default
set smartcase                " adding ≥1 uppercase = case sensitivity
set gdefault                 " substitute all matches in line (not first)
set showmatch                " quickly jump to matching bracket
set cot=menu,longest         " disable preview window on completion
set wmnu                     " command-mode tab to auto-complete
set wim=list:longest,full    " wildmode: complete & list full matches
set wig+=tmp/**              " wildmode: ignore tmp files

" View
set listchars=tab:▸\ ,trail:·,extends:❯,precedes:❮,nbsp:¤,eol:¬
set list                     " display formatting characters
set wrap                     " wrap lines
set showbreak=↪\             " indicator for wrapped lines
set nu rnu                   " add numbered lines (option: relativenumber)
set ttyfast                  " improves redrawing
set lazyredraw               " don't redraw during macros/etc.
set so=3 siso=0              " keep 3 lines off the edges during scroll
set laststatus=2             " always display status bar
set ruler                    " show the cursor position all the time
set showmode                 " display Insert/Visual/etc.
set showcmd                  " display incomplete commands
set virtualedit=block        " allow cursor everywhere in V-Block mode
set mouse=a                  " enable mouse support in the console
set mousehide                " hide pointer during typing, until moved
set encoding=utf-8           " UTF-8 encoding
set foldmethod=syntax        " collapsible code segments
set bs=indent,eol,start      " allow backspacing in insert mode
set nospell                  " spelling correction mode
set shm=a                    " avoid 'press Enter to continue'
set t_Co=256                 " pretty colors everywhere whooo!!

" Backup
set undofile                 " persistent save of undo history
set udir=~/.vim/undo         " store undo in dotfiles
set bdir=~/.vim/backups      " store backup in dotfiles
set vdir=~/.vim/views        " store views in dotfiles
set dir=~/.vim/swaps         " store swap in dotfiles
set history=50               " # of commands to keep
set ut=2000                  " time to initiate swap/CursorHold AU
set autoread                 " updates VIM file if changed elsewhere
set hidden                   " hide buffers instead of closing them
set clipboard+=unnamed       " system clipboard by default

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Initiate w/Pathogen Package Manager
call pathogen#infect()
call pathogen#helptags()

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Use Q for VIM CLI History
map Q q:

" V-Mode Indenting Behavior
vmap > >gv
vmap < <gv

" Redraw screen + remove search highlights
nnoremap <C-L> :nohl<CR><C-L>

" Arrow Keys
noremap <UP> <nop>      " No operation.
noremap <DOWN> <nop>    " No operation.
noremap <LEFT> :bp<cr>  " Back in Buffer
noremap <RIGHT> :bn<cr> " Forward in Buffer
inoremap <DOWN> <nop>
inoremap <UP> <nop>
inoremap <LEFT> <nop>
inoremap <RIGHT> <nop>

" Set MapLeaders
let mapleader=","
let maplocalleader = "\\"

" Leader Key Maps
nnoremap <silent><leader>pp :setlocal paste!<cr>
nnoremap <silent><leader>W :%s/\s\+$//e<CR>:let @/=''<CR>
nnoremap <leader><leader> <c-^>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

if has("autocmd")
  " Enable file type detection + use the default filetype settings
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on
  syntax on

  augroup vimrcEx
  au!

  " Exit 'Insert Mode' after UpdateTime
  au CursorHoldI * stopinsert

  " Filetype settings (tabs, spaces, etc.)
  au FileType python,css,markdown setl et sts=4 ts=4 shiftwidth=4 tw=79
  au FileType ruby,javascript,html,xml setl et sts=2 ts=2 shiftwidth=2

  " Improve Filetype detection
  au BufNewFile,BufReadPost *.md set filetype=markdown

  " Always jump to the last known cursor position.
  au BufReadPost *
    \ if line("'\"") > 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

else
  set autoindent
endif " has("autocmd")

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Color Scheme Modifications
highlight LineNr ctermfg=grey

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
