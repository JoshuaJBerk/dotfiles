""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Basic Settings                                                             "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Vim Defaults
set nocompatible             " vim settings, rather than vi
set modeline                 " allow self-executed file-specific settings
set secure                   " prevent auto-commands in foreign files

" Indentation + Formatting
set expandtab                " use spaces, not tabs
set smarttab                 " insert tabs @ line start re: shiftwidth
set autoindent               " copy the previous line indent
set tabstop=2                " display tabs as X spaces
set softtabstop=2            " insert mode creates X spaces
set shiftwidth=2             " reindent operations (<< && >>)
set shiftround               " use multiple of shiftwidth with '<' and '>'
set formatoptions+=tcqj      " see ':help fo-table' for details
set nojs                     " join lines w/one space only
set encoding=utf-8           " UTF-8 encoding
set nrformats-=octal         " assume hexadecimal numbering
set fileformats+=mac         " auto-detect line endings"
set nospell                  " spelling correction mode
set spellfile=~/.vim/spell/en.utf-8.add
set listchars=tab:▸\ ,trail:·,extends:❯,precedes:❮,nbsp:¤,eol:¬
set list                     " display formatting characters
set wrap                     " wrap lines
set showbreak=↪\             " indicator for wrapped lines

" Search/Substitution/Completion
set hlsearch                 " highlight search results
set incsearch                " do incremental searching
set ignorecase               " removes case sensitivity by default
set smartcase                " adding ≥1 uppercase = case sensitivity
set gdefault                 " substitute all matches in line (not first)
set showmatch mat=5          " quickly jump to matching bracket
set cpt=.,w,b,u,t,i          " complete from buffers, files, and tags
set cot=menu,longest         " disable preview window on completion
set wig+=*/tmp/*,*.zip,*/.git/*

" View
set nu rnu                   " add numbered lines (option: relativenumber)
set so=3 siso=0              " keep 3 lines off the edges during scroll
set ttyfast                  " improves redrawing
set lazyredraw               " don't redraw during macros/etc.
set nosol                    " keep the scrolling cursor position
set ruler                    " display cursor position all the time
set cul                      " cursorline highlighting
set virtualedit=block        " allow cursor everywhere in V-Block mode
set laststatus=2             " always display status bar
set report=0                 " display all file changes
set showmode                 " display Insert/Visual/etc.
set showcmd                  " display incomplete commands
set title                    " filename in the window bar
set mouse=a                  " enable mouse support in the console
set mousehide                " hide pointer during typing, until moved
set foldmethod=syntax        " collapsible code segments
set bs=indent,eol,start      " allow backspacing in insert mode
set shm+=aI                  " avoid 'press Enter to continue'
set t_Co=256                 " pretty colors everywhere whooo!!
set spr sb                   " split windows open below/right
set cmdheight=1              " single line CLI

" Backup
set undofile                 " persistent save of undo history
set udir=$TMPDIR             " store undo in System TMP Directory
set bdir=$TMPDIR             " store backup in System TMP Directory
set vdir=$TMPDIR             " store views in System TMP Directory
set dir=$TMPDIR              " store swap in System TMP Directory
set history=1000             " # of commands to keep
set ut=4000                  " time to initiate swap/CursorHold AU
set autoread autowrite       " continuous VIM file updates
set hidden                   " hide buffers instead of closing them

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugins                                                                    "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Vundle
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'
Plugin 'Shougo/neocomplete.vim'
Plugin 'Shougo/neosnippet.vim'
Plugin 'Shougo/neosnippet-snippets'
Plugin 'honza/vim-snippets'
Plugin 'tpope/vim-abolish'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-dispatch.git'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-endwise'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-unimpaired'
Plugin 'tpope/vim-sleuth'
Plugin 'tpope/vim-eunuch'
Plugin 'justinmk/vim-sneak.git'
Plugin 'godlygeek/tabular.git'
Plugin 'majutsushi/tagbar.git'
Plugin 'scrooloose/syntastic'
Plugin 'scrooloose/nerdtree'
Plugin 'jiangmiao/auto-pairs'
Plugin 'mustache/vim-mustache-handlebars'
Plugin 'kien/rainbow_parentheses.vim.git'
Plugin 'kien/ctrlp.vim.git'
Plugin 'mattn/emmet-vim.git'
Plugin 'mattn/webapi-vim.git'
Plugin 'mattn/gist-vim.git'
Plugin 'coderifous/textobj-word-column.vim'
Plugin 'kana/vim-textobj-user'
Plugin 'kana/vim-textobj-indent'
Plugin 'kana/vim-textobj-function'
Plugin 'kana/vim-textobj-syntax'
Plugin 'kana/vim-textobj-line'
Plugin 'kana/vim-textobj-entire'
Plugin 'terryma/vim-expand-region'
Plugin 'chrisbra/NrrwRgn'
Plugin 'edsono/vim-matchit'
Plugin 'roman/golden-ratio.git'
Plugin 'Keithbsmiley/investigate.vim'
Plugin 'chrisbra/Colorizer'
Plugin 'guns/xterm-color-table.vim'
Plugin 'sjl/gundo.vim.git'
Plugin 'kshenoy/vim-signature'
Plugin 'mhinz/vim-startify'
Plugin 'mhinz/vim-signify'
Plugin 'mileszs/ack.vim.git'
Plugin 'itchyny/lightline.vim'
Plugin 'takac/vim-hardtime'
call vundle#end()

" Variables
let g:NERDTreeHijackNetrw = 0
let g:syntastic_check_on_open = 1
let g:syntastic_error_symbol = '✗'
let g:syntastic_style_error_symbol = '✠'
let g:syntastic_warning_symbol = '∆'
let g:syntastic_style_warning_symbol = '≈'
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_auto_select = 1
let g:neosnippet#enable_snipmate_compatibility = 1
let g:colorizer_auto_filetype='css,scss,sass'
let g:investigate_use_dash = 1
let g:hardtime_default_on = 0
let g:sneak#streak = 1
let g:signify_vcs_list = [ 'git' ]
let g:startify_change_to_vcs_root = 1
let g:startify_custom_header =
      \ map(split(system('fortune | cowsay'), '\n'), '"   ". v:val') + ['']
let g:ctrlp_cmd = 'CtrlPMixed'
let g:ctrlp_extensions = ['tag', 'buffertag', 'quickfix', 'dir',
                          \ 'rtscript', 'line', 'changes', 'mixed']

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Functions                                                                  "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

function! s:InsertTabWrapper()
  let col = col('.') - 1
  if !col || getline('.')[col - 1] !~ '\k'
    return "\<TAB>"
  else
    return "\<C-p>"
  endif
endfunction

function! s:VSearch()
  let temp = @@
  norm! gvy
  let @/ = '\V' . substitute(escape(@@, '\'), '\n', '\\n', 'g')
  call histadd('/', substitute(@/, '[?/]', '\="\\%d".char2nr(submatch(0))', 'g'))
  let @@ = temp
endfunction

function! s:SortFile()
  normal! ggvG
  :sort ui
  normal! v
endfunction

function! s:ClearWhitespace()
  normal mz
  silent! %s/\s\+$//
  let @/=""
  update
  normal `z
endfunction

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Key Mappings                                                               "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Use Q for VIM CLI History
no Q q:

" Line Navigation
no H ^
no L g_

" Tab For All The Things!
ino <TAB> <C-R>=<SID>InsertTabWrapper()<CR>

" Redraw screen + remove search highlights
nn <C-L> :nohl<CR><C-L>

" Insert a hash rocket with <c-l>
im <c-l> <space>=><space>

" Yank to EOL
nn Y y$

" Reselect Visual Block after Indent/Outdent
vn < <gv
vn > >gv

" Set MapLeaders
let mapleader=","

" Leader Key Maps
map <leader>y "*y
nn <leader><leader> <C-^>
vn <leader>s :sort<CR>
vn <leader>r "ry:%s/<C-R>r/
nn <silent><leader><SPACE> <Nop>
nn <silent><leader>; <Nop>
nn <silent><leader>ul :t.<CR>Vr=
nn <silent><leader>cd :lcd %:p:h<CR>
nn <silent><leader>rc :so ~/.vimrc<CR>
nn <silent><leader>fef :normal! gg=G``<CR>
nn <silent><leader>sp :setl spell!<CR>
nn <silent><leader>pp :setl paste!<CR>
nn <silent><leader>ll :setl list!<CR>
nn <silent><leader>sf :<C-U>call <SID>SortFile()<CR>
vn <silent><leader>/ :<C-U>call <SID>VSearch()<CR>/<CR>
nn <silent><leader>W :<C-U>call <SID>ClearWhitespace()<CR>
nn <silent><leader>it a<C-R>=strftime('%F %H:%M:%S.0 %z')<CR>
nn <silent><leader>fw :exe "vimgrep ".expand("<cword>")." %"<CR>:copen<CR>
nn <silent><leader>ff :exe 'vimgrep /'.@/.'/g %'<CR>:copen<CR>

" Plugin Leader Key Maps
no <leader>a :Ack<SPACE>
no <leader>t :Tabularize /
no <leader>e :Errors<CR>
no <leader>g :Gist<CR>
no <leader>mv :Move<SPACE>
no <leader>rn :Rename<SPACE>
no <leader>sw :SudoWrite<CR>
no <leader>pu :PluginUpdate<CR>
no <leader>pc :PluginClean!<CR>
no <leader>sl :SLoad<CR>
no <leader>ss :SSave<CR>
no <leader>sd :SDelete<CR>
no <leader>gs :Gstatus<CR>
no <leader>gd :Gdiff<CR>
no <leader>gc :Gcommit<CR>
no <leader>gb :Gblame<CR>
no <leader>gl :Glog<CR>
no <leader>gp :Git push<CR>
no <leader>gw :Gwrite<CR>
no <leader>gr :Gremove<CR>
no <leader>k :call investigate#Investigate()<CR>
no <silent><leader>ht :HardTimeToggle<CR>
no <silent><leader>ct :ColorToggle<CR>
no <silent><leader>rt :RainbowParenthesesToggle<CR>
no <silent><leader>st :SyntasticToggleMode<CR>
no <silent><leader>nt :NERDTreeToggle<CR>
no <silent><leader>tt :TagbarToggle<CR>
no <silent><leader>ut :GundoToggle<CR>
no <silent><leader>xt :XtermColorTable<CR>

" Miscellaneous Plugin Maps
imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Auto Commands                                                              "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

if has("autocmd")
  " Enable file type detection + use the default filetype settings
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on
  syntax on

  augroup vimrcEx
  au!

  " Exit 'Insert Mode' after UpdateTime
  au CursorHoldI * stopinsert

  " Formatting
  au FileType python,css,markdown setl et sts=4 ts=4 sw=4 tw=79
  au FileType ruby,javascript,html,xml setl et sts=2 ts=2 sw=2

  " Folding
  au FileType python setl foldmethod=indent
  au FileType css setl foldmethod=marker foldmarker={,}

  " Enable omni completion.
  au FileType css setl omnifunc=csscomplete#CompleteCSS
  au FileType html,markdown setl omnifunc=htmlcomplete#CompleteTags
  au FileType javascript setl omnifunc=javascriptcomplete#CompleteJS
  au FileType python setl omnifunc=pythoncomplete#Complete
  au FileType xml setl omnifunc=xmlcomplete#CompleteTags

  " Improve Filetype detection
  au BufNewFile,BufRead *.md setf markdown
  au BufNewFile,BufRead *.json setf javascript

  " Markdown Syntax/Spelling
  au FileType markdown setl syn=off spell

  " Allow stylesheets to autocomplete hyphenated words
  au FileType css,scss,sass setl iskeyword+=-

  " Always jump to the last known cursor position.
  au BufReadPost *
    \ if line("'\"") > 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

endif

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Miscellaneous                                                              "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Change Background by Time of Day
let hour = strftime("%H")
if hour >= 7 && hour <= 19
  set background=light
else
  set background=dark
endif

" Color Scheme
colo Solarized

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" End of Settings                                                            "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
